% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_app.R
\name{get_app}
\alias{get_app}
\title{Clone a Specific Branch of the shinyAppPkgs Repository and Optionally Open it}
\usage{
get_app(app = "main", open = FALSE)
}
\arguments{
\item{app}{The name of the branch to be cloned as a character string. If
not specified, defaults to "main".}

\item{open}{A logical parameter, when set to \code{TRUE}, the function will attempt
to open the new R project in a new RStudio session using
\code{rstudioapi::openProject}. Defaults to \code{FALSE}.}
}
\value{
Invisible \code{NULL}. The function is called for its side effects.
}
\description{
Clones a specified branch of the \code{shinyAppPkgs} GitHub repository into the
current working directory. It cleans the cloned directory by removing \code{.git}
files, \code{.DS_Store}, and \code{.Rbuildignore} files, renames the R project file,
and optionally opens it in a new RStudio session.
}
\section{Details}{

If the directory for the branch already exists, it is deleted and re-cloned
to ensure the latest version is present.
After cloning, the function performs cleanup operations:
\itemize{
\item Deletes \code{.git} directory and files.
\item Removes \code{.DS_Store} files.
\item Deletes any \code{.Rbuildignore} files present.
It then renames the R project file to match the name of the cloned branch
and, if specified, opens the project in RStudio.
}
}

\section{Note}{

\itemize{
\item The \code{rstudioapi::openProject} function requires RStudio to be installed
and will only work if R is running inside RStudio.
\item The working directory is temporarily changed during the function's
execution but is reset at the end.
}
}

\examples{
# get_app("02_movies-app")
}
